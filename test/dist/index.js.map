{"version":3,"file":"paeckchen.js","sources":["node_modules/paeckchen-cli/node_modules/paeckchen-core/node_modules/node-libs-browser/node_modules/buffer/node_modules/isarray/index.js","node_modules/paeckchen-cli/node_modules/paeckchen-core/node_modules/node-libs-browser/node_modules/buffer/node_modules/ieee754/index.js","node_modules/paeckchen-cli/node_modules/paeckchen-core/node_modules/node-libs-browser/node_modules/buffer/node_modules/base64-js/lib/b64.js","node_modules/chai/node_modules/deep-eql/node_modules/type-detect/lib/type.js","node_modules/chai/node_modules/deep-eql/node_modules/type-detect/index.js","node_modules/paeckchen-cli/node_modules/paeckchen-core/node_modules/node-libs-browser/node_modules/buffer/index.js","node_modules/chai/lib/chai/utils/getEnumerableProperties.js","node_modules/chai/lib/chai/utils/getProperties.js","node_modules/chai/node_modules/deep-eql/lib/eql.js","node_modules/chai/node_modules/type-detect/lib/type.js","node_modules/chai/node_modules/deep-eql/index.js","node_modules/chai/node_modules/type-detect/index.js","node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","node_modules/chai/lib/chai/utils/addChainableMethod.js","node_modules/chai/lib/chai/utils/overwriteMethod.js","node_modules/chai/lib/chai/utils/overwriteProperty.js","node_modules/chai/lib/chai/utils/addMethod.js","node_modules/chai/lib/chai/utils/getName.js","node_modules/chai/lib/chai/utils/addProperty.js","node_modules/chai/lib/chai/utils/getPathInfo.js","node_modules/chai/lib/chai/utils/hasProperty.js","node_modules/chai/lib/chai/utils/transferFlags.js","node_modules/chai/lib/chai/utils/getPathValue.js","node_modules/chai/lib/chai/utils/flag.js","node_modules/chai/lib/chai/utils/objDisplay.js","node_modules/chai/lib/chai/utils/inspect.js","node_modules/chai/lib/chai/utils/getActual.js","node_modules/chai/lib/chai/utils/getMessage.js","node_modules/chai/lib/chai/utils/expectTypes.js","node_modules/chai/lib/chai/utils/test.js","node_modules/chai/lib/chai/utils/index.js","node_modules/chai/node_modules/assertion-error/index.js","node_modules/chai/lib/chai/interface/assert.js","node_modules/chai/lib/chai/core/assertions.js","node_modules/chai/lib/chai/interface/should.js","node_modules/chai/lib/chai/interface/expect.js","node_modules/chai/lib/chai/assertion.js","node_modules/chai/lib/chai/config.js","node_modules/chai/lib/chai.js","node_modules/chai/index.js","src/currency2.ts","test/curr_test.ts","test/index.ts"],"sourcesContent":["var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Exports\n */\n\nvar exports = module.exports = getType;\n\n/*!\n * Detectable javascript natives\n */\n\nvar natives = {\n    '[object Array]': 'array'\n  , '[object RegExp]': 'regexp'\n  , '[object Function]': 'function'\n  , '[object Arguments]': 'arguments'\n  , '[object Date]': 'date'\n};\n\n/**\n * ### typeOf (obj)\n *\n * Use several different techniques to determine\n * the type of object being tested.\n *\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\n\nfunction getType (obj) {\n  var str = Object.prototype.toString.call(obj);\n  if (natives[str]) return natives[str];\n  if (obj === null) return 'null';\n  if (obj === undefined) return 'undefined';\n  if (obj === Object(obj)) return 'object';\n  return typeof obj;\n}\n\nexports.Library = Library;\n\n/**\n * ### Library\n *\n * Create a repository for custom type detection.\n *\n * ```js\n * var lib = new type.Library;\n * ```\n *\n */\n\nfunction Library () {\n  this.tests = {};\n}\n\n/**\n * #### .of (obj)\n *\n * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n *\n * @param {Mixed} object to test\n * @return {String} type\n */\n\nLibrary.prototype.of = getType;\n\n/**\n * #### .define (type, test)\n *\n * Add a test to for the `.test()` assertion.\n *\n * Can be defined as a regular expression:\n *\n * ```js\n * lib.define('int', /^[0-9]+$/);\n * ```\n *\n * ... or as a function:\n *\n * ```js\n * lib.define('bln', function (obj) {\n *   if ('boolean' === lib.of(obj)) return true;\n *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n *   return !! ~blns.indexOf(obj);\n * });\n * ```\n *\n * @param {String} type\n * @param {RegExp|Function} test\n * @api public\n */\n\nLibrary.prototype.define = function (type, test) {\n  if (arguments.length === 1) return this.tests[type];\n  this.tests[type] = test;\n  return this;\n};\n\n/**\n * #### .test (obj, test)\n *\n * Assert that an object is of type. Will first\n * check natives, and if that does not pass it will\n * use the user defined custom tests.\n *\n * ```js\n * assert(lib.test('1', 'int'));\n * assert(lib.test('yes', 'bln'));\n * ```\n *\n * @param {Mixed} object\n * @param {String} type\n * @return {Boolean} result\n * @api public\n */\n\nLibrary.prototype.test = function (obj, type) {\n  if (type === getType(obj)) return true;\n  var test = this.tests[type];\n\n  if (test && 'regexp' === getType(test)) {\n    return test.test(obj);\n  } else if (test && 'function' === getType(test)) {\n    return test(obj);\n  } else {\n    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n  }\n};\n","module.exports = require('./lib/type');\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar type = require('type-detect');\n\n/*!\n * Buffer.isBuffer browser shim\n */\n\nvar Buffer;\ntry { Buffer = require('buffer').Buffer; }\ncatch(ex) {\n  Buffer = {};\n  Buffer.isBuffer = function() { return false; }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\n\n/**\n * Assert super-strict (egal) equality between\n * two objects of any type.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @param {Array} memoised (optional)\n * @return {Boolean} equal match\n */\n\nfunction deepEqual(a, b, m) {\n  if (sameValue(a, b)) {\n    return true;\n  } else if ('date' === type(a)) {\n    return dateEqual(a, b);\n  } else if ('regexp' === type(a)) {\n    return regexpEqual(a, b);\n  } else if (Buffer.isBuffer(a)) {\n    return bufferEqual(a, b);\n  } else if ('arguments' === type(a)) {\n    return argumentsEqual(a, b, m);\n  } else if (!typeEqual(a, b)) {\n    return false;\n  } else if (('object' !== type(a) && 'object' !== type(b))\n  && ('array' !== type(a) && 'array' !== type(b))) {\n    return sameValue(a, b);\n  } else {\n    return objectEqual(a, b, m);\n  }\n}\n\n/*!\n * Strict (egal) equality test. Ensures that NaN always\n * equals NaN and `-0` does not equal `+0`.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} equal match\n */\n\nfunction sameValue(a, b) {\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  return a !== a && b !== b;\n}\n\n/*!\n * Compare the types of two given objects and\n * return if they are equal. Note that an Array\n * has a type of `array` (not `object`) and arguments\n * have a type of `arguments` (not `array`/`object`).\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction typeEqual(a, b) {\n  return type(a) === type(b);\n}\n\n/*!\n * Compare two Date objects by asserting that\n * the time values are equal using `saveValue`.\n *\n * @param {Date} a\n * @param {Date} b\n * @return {Boolean} result\n */\n\nfunction dateEqual(a, b) {\n  if ('date' !== type(b)) return false;\n  return sameValue(a.getTime(), b.getTime());\n}\n\n/*!\n * Compare two regular expressions by converting them\n * to string and checking for `sameValue`.\n *\n * @param {RegExp} a\n * @param {RegExp} b\n * @return {Boolean} result\n */\n\nfunction regexpEqual(a, b) {\n  if ('regexp' !== type(b)) return false;\n  return sameValue(a.toString(), b.toString());\n}\n\n/*!\n * Assert deep equality of two `arguments` objects.\n * Unfortunately, these must be sliced to arrays\n * prior to test to ensure no bad behavior.\n *\n * @param {Arguments} a\n * @param {Arguments} b\n * @param {Array} memoize (optional)\n * @return {Boolean} result\n */\n\nfunction argumentsEqual(a, b, m) {\n  if ('arguments' !== type(b)) return false;\n  a = [].slice.call(a);\n  b = [].slice.call(b);\n  return deepEqual(a, b, m);\n}\n\n/*!\n * Get enumerable properties of a given object.\n *\n * @param {Object} a\n * @return {Array} property names\n */\n\nfunction enumerable(a) {\n  var res = [];\n  for (var key in a) res.push(key);\n  return res;\n}\n\n/*!\n * Simple equality for flat iterable objects\n * such as Arrays or Node.js buffers.\n *\n * @param {Iterable} a\n * @param {Iterable} b\n * @return {Boolean} result\n */\n\nfunction iterableEqual(a, b) {\n  if (a.length !==  b.length) return false;\n\n  var i = 0;\n  var match = true;\n\n  for (; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      match = false;\n      break;\n    }\n  }\n\n  return match;\n}\n\n/*!\n * Extension to `iterableEqual` specifically\n * for Node.js Buffers.\n *\n * @param {Buffer} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction bufferEqual(a, b) {\n  if (!Buffer.isBuffer(b)) return false;\n  return iterableEqual(a, b);\n}\n\n/*!\n * Block for `objectEqual` ensuring non-existing\n * values don't get in.\n *\n * @param {Mixed} object\n * @return {Boolean} result\n */\n\nfunction isValue(a) {\n  return a !== null && a !== undefined;\n}\n\n/*!\n * Recursively check the equality of two objects.\n * Once basic sameness has been established it will\n * defer to `deepEqual` for each enumerable key\n * in the object.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction objectEqual(a, b, m) {\n  if (!isValue(a) || !isValue(b)) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  var i;\n  if (m) {\n    for (i = 0; i < m.length; i++) {\n      if ((m[i][0] === a && m[i][1] === b)\n      ||  (m[i][0] === b && m[i][1] === a)) {\n        return true;\n      }\n    }\n  } else {\n    m = [];\n  }\n\n  try {\n    var ka = enumerable(a);\n    var kb = enumerable(b);\n  } catch (ex) {\n    return false;\n  }\n\n  ka.sort();\n  kb.sort();\n\n  if (!iterableEqual(ka, kb)) {\n    return false;\n  }\n\n  m.push([ a, b ]);\n\n  var key;\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], m)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*!\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Exports\n */\n\nvar exports = module.exports = getType;\n\n/**\n * ### typeOf (obj)\n *\n * Use several different techniques to determine\n * the type of object being tested.\n *\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nvar objectTypeRegexp = /^\\[object (.*)\\]$/;\n\nfunction getType(obj) {\n  var type = Object.prototype.toString.call(obj).match(objectTypeRegexp)[1].toLowerCase();\n  // Let \"new String('')\" return 'object'\n  if (typeof Promise === 'function' && obj instanceof Promise) return 'promise';\n  // PhantomJS has type \"DOMWindow\" for null\n  if (obj === null) return 'null';\n  // PhantomJS has type \"DOMWindow\" for undefined\n  if (obj === undefined) return 'undefined';\n  return type;\n}\n\nexports.Library = Library;\n\n/**\n * ### Library\n *\n * Create a repository for custom type detection.\n *\n * ```js\n * var lib = new type.Library;\n * ```\n *\n */\n\nfunction Library() {\n  if (!(this instanceof Library)) return new Library();\n  this.tests = {};\n}\n\n/**\n * #### .of (obj)\n *\n * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n *\n * @param {Mixed} object to test\n * @return {String} type\n */\n\nLibrary.prototype.of = getType;\n\n/**\n * #### .define (type, test)\n *\n * Add a test to for the `.test()` assertion.\n *\n * Can be defined as a regular expression:\n *\n * ```js\n * lib.define('int', /^[0-9]+$/);\n * ```\n *\n * ... or as a function:\n *\n * ```js\n * lib.define('bln', function (obj) {\n *   if ('boolean' === lib.of(obj)) return true;\n *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n *   return !! ~blns.indexOf(obj);\n * });\n * ```\n *\n * @param {String} type\n * @param {RegExp|Function} test\n * @api public\n */\n\nLibrary.prototype.define = function(type, test) {\n  if (arguments.length === 1) return this.tests[type];\n  this.tests[type] = test;\n  return this;\n};\n\n/**\n * #### .test (obj, test)\n *\n * Assert that an object is of type. Will first\n * check natives, and if that does not pass it will\n * use the user defined custom tests.\n *\n * ```js\n * assert(lib.test('1', 'int'));\n * assert(lib.test('yes', 'bln'));\n * ```\n *\n * @param {Mixed} object\n * @param {String} type\n * @return {Boolean} result\n * @api public\n */\n\nLibrary.prototype.test = function(obj, type) {\n  if (type === getType(obj)) return true;\n  var test = this.tests[type];\n\n  if (test && 'regexp' === getType(test)) {\n    return test.test(obj);\n  } else if (test && 'function' === getType(test)) {\n    return test(obj);\n  } else {\n    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n  }\n};\n","module.exports = require('./lib/eql');\n","module.exports = require('./lib/type');\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Overwites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.length(3);\n *     expect(myFoo).to.have.length.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function () {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    return result === undefined ? this : result;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function () {\n    var result = method(_method).apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar transferFlags = require('./transferFlags');\nvar flag = require('./flag');\nvar config = require('../config');\n\n/*!\n * Module variables\n */\n\n// Check whether `__proto__` is supported\nvar hasProtoSupport = '__proto__' in Object;\n\n// Without `__proto__` support, this module will need to add properties to a function.\n// However, some Function.prototype methods cannot be overwritten,\n// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).\nvar excludeNames = /^(?:length|name|arguments|caller)$/;\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### addChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var assert = function assert() {\n          var old_ssfi = flag(this, 'ssfi');\n          if (old_ssfi && config.includeStack === false)\n            flag(this, 'ssfi', assert);\n          var result = chainableBehavior.method.apply(this, arguments);\n          return result === undefined ? this : result;\n        };\n\n        // Use `__proto__` if available\n        if (hasProtoSupport) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = assert.__proto__ = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (!excludeNames.test(asserterName)) {\n              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n              Object.defineProperty(assert, asserterName, pd);\n            }\n          });\n        }\n\n        transferFlags(this, assert);\n        return assert;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteMethod (ctx, name, fn)\n *\n * Overwites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () { return this; };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  ctx[name] = function () {\n    var result = method(_super).apply(this, arguments);\n    return result === undefined ? this : result;\n  }\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteProperty (ctx, name, fn)\n *\n * Overwites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        var result = getter(_super).call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('../config');\n\n/**\n * ### .addMethod (ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\nvar flag = require('./flag');\n\nmodule.exports = function (ctx, name, method) {\n  ctx[name] = function () {\n    var old_ssfi = flag(this, 'ssfi');\n    if (old_ssfi && config.includeStack === false)\n      flag(this, 'ssfi', ctx[name]);\n    var result = method.apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n","/*!\n * Chai - getName utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getName(func)\n *\n * Gets the name of a function, in a cross-browser way.\n *\n * @param {Function} a function (usually a constructor)\n * @namespace Utils\n * @name getName\n */\n\nmodule.exports = function (func) {\n  if (func.name) return func.name;\n\n  var match = /^\\s?function ([^(]*)\\(/.exec(func);\n  return match && match[1] ? match[1] : \"\";\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('../config');\nvar flag = require('./flag');\n\n/**\n * ### addProperty (ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  Object.defineProperty(ctx, name,\n    { get: function addProperty() {\n        var old_ssfi = flag(this, 'ssfi');\n        if (old_ssfi && config.includeStack === false)\n          flag(this, 'ssfi', addProperty);\n\n        var result = getter.call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - getPathInfo utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar hasProperty = require('./hasProperty');\n\n/**\n * ### .getPathInfo(path, object)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nmodule.exports = function getPathInfo(path, obj) {\n  var parsed = parsePath(path),\n      last = parsed[parsed.length - 1];\n\n  var info = {\n    parent: parsed.length > 1 ? _getPathValue(parsed, obj, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: _getPathValue(parsed, obj)\n  };\n  info.exists = hasProperty(info.name, info.parent);\n\n  return info;\n};\n\n\n/*!\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `_getPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be as near infinitely deep and nested\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath (path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[')\n    , parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function (value) {\n    var re = /^\\[(\\d+)\\]$/\n      , mArr = re.exec(value);\n    if (mArr) return { i: parseFloat(mArr[1]) };\n    else return { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n  });\n}\n\n\n/*!\n * ## _getPathValue(parsed, obj)\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(parsed, obj);\n *\n * @param {Object} parsed definition from `parsePath`.\n * @param {Object} object to search against\n * @param {Number} object to search against\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction _getPathValue (parsed, obj, index) {\n  var tmp = obj\n    , res;\n\n  index = (index === undefined ? parsed.length : index);\n\n  for (var i = 0, l = index; i < l; i++) {\n    var part = parsed[i];\n    if (tmp) {\n      if ('undefined' !== typeof part.p)\n        tmp = tmp[part.p];\n      else if ('undefined' !== typeof part.i)\n        tmp = tmp[part.i];\n      if (i == (l - 1)) res = tmp;\n    } else {\n      res = undefined;\n    }\n  }\n  return res;\n}\n","/*!\n * Chai - hasProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has\n * named property or numeric array index.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with natives\n * and null/undefined values.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty('str', obj);  // true\n *     hasProperty('constructor', obj);  // true\n *     hasProperty('bar', obj);  // false\n *\n *     hasProperty('length', obj.str); // true\n *     hasProperty(1, obj.str);  // true\n *     hasProperty(5, obj.str);  // false\n *\n *     hasProperty('length', obj.arr);  // true\n *     hasProperty(2, obj.arr);  // true\n *     hasProperty(3, obj.arr);  // false\n *\n * @param {Objuect} object\n * @param {String|Number} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nvar literals = {\n    'number': Number\n  , 'string': String\n};\n\nmodule.exports = function hasProperty(name, obj) {\n  var ot = type(obj);\n\n  // Bad Object, obviously no props at all\n  if(ot === 'null' || ot === 'undefined')\n    return false;\n\n  // The `in` operator does not work with certain literals\n  // box these before the check\n  if(literals[ot] && typeof obj !== 'object')\n    obj = new literals[ot](obj);\n\n  return name in obj;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, and `message`)\n * will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAsseriton = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function (assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","/*!\n * Chai - getPathValue utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\nvar getPathInfo = require('./getPathInfo');\n\n/**\n * ### .getPathValue(path, object)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue('prop1.str', obj); // Hello\n *     getPathValue('prop1.att[2]', obj); // b\n *     getPathValue('prop2.arr[0].nested', obj); // Universe\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\nmodule.exports = function(path, obj) {\n  var info = getPathInfo(path, obj);\n  return info.value;\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function (obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay (object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function (obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('./getName');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\n\nmodule.exports = inspect;\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  // Some type of object without properties can be shortcutted.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      var name = getName(value);\n      var nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    var name = getName(value);\n    var nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str;\n  if (value.__lookupGetter__) {\n    if (value.__lookupGetter__(key)) {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function (obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , inspect = require('./inspect')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function (obj, types) {\n  var obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lirum, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  if (!types.some(function (expected) { return type(obj) === expected; })) {\n    throw new AssertionError(\n      'object tested must be ' + str + ', but ' + type(obj) + ' given'\n    );\n  }\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag');\n\n/**\n * # test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Main exports\n */\n\nvar exports = module.exports = {};\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path value\n */\n\nexports.getPathValue = require('./getPathValue');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = require('./getPathInfo');\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = require('./hasProperty');\n\n/*!\n * Function name\n */\n\nexports.getName = require('./getName');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n","/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || arguments.callee;\n  if (ssf && Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n\nmodule.exports = function (chai, util) {\n\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   * Asserts that value is NaN\n   *\n   *    assert.isNaN('foo', 'foo is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   * Asserts that value is not NaN\n   *\n   *    assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg).not.to.be.NaN;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('number');\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.include('foobar', 'bar', 'foobar contains string \"bar\"');\n   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.notInclude('foobar', 'baz', 'string not include substring');\n   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude).not.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop);\n  };\n\n  /**\n   * ### .deepProperty(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`, which can be a\n   * string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name deepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop);\n  };\n\n  /**\n   * ### .notDeepProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notDeepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`.\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.property(prop, val);\n  };\n\n  /**\n   * ### .propertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`.\n   *\n   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');\n   *\n   * @name propertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for deep\n   * reference.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`. `property` can use dot- and\n   * bracket-notation for deep reference.\n   *\n   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *\n   * @name deepPropertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` property with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg).to.have.length(len);\n  };\n\n  /**\n   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])\n   *\n   * Asserts that `function` will throw an error that is an instance of\n   * `constructor`, or alternately that it will throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.throws(fn, 'function throws a reference error');\n   *     assert.throws(fn, /function throws a reference error/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, ReferenceError, 'function throws a reference error');\n   *     assert.throws(fn, ReferenceError, /function throws a reference error/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errt, errs, msg) {\n    if ('string' === typeof errt || errt instanceof RegExp) {\n      errs = errt;\n      errt = null;\n    }\n\n    var assertErr = new Assertion(fn, msg).to.throw(errt, errs);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(function, [constructor/regexp], [message])\n   *\n   * Asserts that `function` will _not_ throw an error that is an instance of\n   * `constructor`, or alternately that it will not throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.doesNotThrow(fn, Error, 'function does not throw');\n   *\n   * @name doesNotThrow\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, type, msg) {\n    if ('string' === typeof type) {\n      msg = type;\n      type = null;\n    }\n\n    new Assertion(fn, msg).to.not.Throw(type);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        throw new Error('Invalid operator \"' + operator + '\"');\n    }\n    var test = new Assertion(ok, msg);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members.\n   * Order is not taken into account.\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg).to.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members - using a deep equality checking.\n   * Order is not taken into account.\n   *\n   *     assert.sameDeepMembers([ {b: 3}, {a: 2}, {c: 5} ], [ {c: 5}, {b: 3}, {a: 2} ], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg).to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset`.\n   * Order is not taken into account.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg).to.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` - using deep equality checking.\n   * Order is not taken into account.\n   * Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ {a: 1}, {b: 2}, {c: 3} ], [ {b: 2}, {a: 1}, {b: 2} ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg).to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg).to.be.oneOf(list);\n  }\n\n   /**\n   * ### .changes(function, object, property)\n   *\n   * Asserts that a function changes the value of a property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop) {\n    new Assertion(fn).to.change(obj, prop);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property)\n   *\n   * Asserts that a function does not changes the value of a property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop) {\n    new Assertion(fn).to.not.change(obj, prop);\n  }\n\n   /**\n   * ### .increases(function, object, property)\n   *\n   * Asserts that a function increases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop) {\n    new Assertion(fn).to.increase(obj, prop);\n  }\n\n   /**\n   * ### .doesNotIncrease(function, object, property)\n   *\n   * Asserts that a function does not increase object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop) {\n    new Assertion(fn).to.not.increase(obj, prop);\n  }\n\n   /**\n   * ### .decreases(function, object, property)\n   *\n   * Asserts that a function decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop) {\n    new Assertion(fn).to.decrease(obj, prop);\n  }\n\n   /**\n   * ### .doesNotDecrease(function, object, property)\n   *\n   * Asserts that a function does not decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop) {\n    new Assertion(fn).to.not.decrease(obj, prop);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freese({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.frozen;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen');\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , toString = Object.prototype.toString\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to\n   * improve the readability of your assertions. They\n   * do not provide testing capabilities unless they\n   * have been overwritten by a plugin.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been'\n  , 'is', 'and', 'has', 'have'\n  , 'with', 'that', 'which', 'at'\n  , 'of', 'same' ].forEach(function (chain) {\n    Assertion.addProperty(chain, function () {\n      return this;\n    });\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates any of assertions following in the chain.\n   *\n   *     expect(foo).to.not.equal('bar');\n   *     expect(goodFn).to.not.throw(Error);\n   *     expect({ foo: 'baz' }).to.have.property('foo')\n   *       .and.not.equal('bar');\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Sets the `deep` flag, later used by the `equal` and\n   * `property` assertions.\n   *\n   *     expect(foo).to.deep.equal({ bar: 'baz' });\n   *     expect({ foo: { bar: { baz: 'quux' } } })\n   *       .to.have.deep.property('foo.bar.baz', 'quux');\n   *\n   * `.deep.property` special characters can be escaped\n   * by adding two slashes before the `.` or `[]`.\n   *\n   *     var deepCss = { '.link': { '[target]': 42 }};\n   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Sets the `any` flag, (opposite of the `all` flag)\n   * later used in the `keys` assertion.\n   *\n   *     expect(foo).to.have.any.keys('bar', 'baz');\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false)\n  });\n\n\n  /**\n   * ### .all\n   *\n   * Sets the `all` flag (opposite of the `any` flag)\n   * later used by the `keys` assertion.\n   *\n   *     expect(foo).to.have.all.keys('bar', 'baz');\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type)\n   *\n   * The `a` and `an` assertions are aliases that can be\n   * used either as language chains or to assert a value's\n   * type.\n   *\n   *     // typeof\n   *     expect('test').to.be.a('string');\n   *     expect({ foo: 'bar' }).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(new Promise).to.be.a('promise');\n   *     expect(new Float32Array()).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   *     // es6 overrides\n   *     expect({[Symbol.toStringTag]:()=>'foo'}).to.be.a('foo');\n   *\n   *     // language chain\n   *     expect(foo).to.be.an.instanceof(Foo);\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj)\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(value)\n   *\n   * The `include` and `contain` assertions can be used as either property\n   * based language chains or as methods to assert the inclusion of an object\n   * in an array or a substring in a string. When used as language chains,\n   * they toggle the `contains` flag for the `keys` assertion.\n   *\n   *     expect([1,2,3]).to.include(2);\n   *     expect('foobar').to.contain('foo');\n   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Object|String|Number} obj\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    _.expectTypes(this, ['array', 'object', 'string']);\n\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var expected = false;\n\n    if (_.type(obj) === 'array' && _.type(val) === 'object') {\n      for (var i in obj) {\n        if (_.eql(obj[i], val)) {\n          expected = true;\n          break;\n        }\n      }\n    } else if (_.type(val) === 'object') {\n      if (!flag(this, 'negate')) {\n        for (var k in val) new Assertion(obj).property(k, val[k]);\n        return;\n      }\n      var subset = {};\n      for (var k in val) subset[k] = obj[k];\n      expected = _.eql(subset, val);\n    } else {\n      expected = (obj != undefined) && ~obj.indexOf(val);\n    }\n    this.assert(\n        expected\n      , 'expected #{this} to include ' + _.inspect(val)\n      , 'expected #{this} to not include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is truthy.\n   *\n   *     expect('everything').to.be.ok;\n   *     expect(1).to.be.ok;\n   *     expect(false).to.not.be.ok;\n   *     expect(undefined).to.not.be.ok;\n   *     expect(null).to.not.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is `true`.\n   *\n   *     expect(true).to.be.true;\n   *     expect(1).to.not.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , this.negate ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is `false`.\n   *\n   *     expect(false).to.be.false;\n   *     expect(0).to.not.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , this.negate ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is `null`.\n   *\n   *     expect(null).to.be.null;\n   *     expect(undefined).to.not.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *     expect(null).to.not.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   * Asserts that the target is `NaN`.\n   *\n   *     expect('foo').to.be.NaN;\n   *     expect(4).not.to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi'\n   *       , bar = null\n   *       , baz;\n   *\n   *     expect(foo).to.exist;\n   *     expect(bar).to.not.exist;\n   *     expect(baz).to.not.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    this.assert(\n        null != flag(this, 'object')\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n\n  /**\n   * ### .empty\n   *\n   * Asserts that the target's length is `0`. For arrays and strings, it checks\n   * the `length` property. For objects, it gets the count of\n   * enumerable keys.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *     expect({}).to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var obj = flag(this, 'object')\n      , expected = obj;\n\n    if (Array.isArray(obj) || 'string' === typeof object) {\n      expected = obj.length;\n    } else if (typeof obj === 'object') {\n      expected = Object.keys(obj).length;\n    }\n\n    this.assert(\n        !expected\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an arguments object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = Object.prototype.toString.call(obj);\n    this.assert(\n        '[object Arguments]' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(value)\n   *\n   * Asserts that the target is strictly equal (`===`) to `value`.\n   * Alternately, if the `deep` flag is set, asserts that\n   * the target is deeply equal to `value`.\n   *\n   *     expect('hello').to.equal('hello');\n   *     expect(42).to.equal(42);\n   *     expect(1).to.not.equal(true);\n   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });\n   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @alias deep.equal\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      return this.eql(val);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(value)\n   *\n   * Asserts that the target is deeply equal to `value`.\n   *\n   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });\n   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(value)\n   *\n   * Asserts that the target is greater than `value`.\n   *\n   *     expect(10).to.be.above(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len > n\n        , 'expected #{this} to have a length above #{exp} but got #{act}'\n        , 'expected #{this} to not have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above ' + n\n        , 'expected #{this} to be at most ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(value)\n   *\n   * Asserts that the target is greater than or equal to `value`.\n   *\n   *     expect(10).to.be.at.least(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.least(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= n\n        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n        , 'expected #{this} to have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least ' + n\n        , 'expected #{this} to be below ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(value)\n   *\n   * Asserts that the target is less than `value`.\n   *\n   *     expect(5).to.be.below(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len < n\n        , 'expected #{this} to have a length below #{exp} but got #{act}'\n        , 'expected #{this} to not have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below ' + n\n        , 'expected #{this} to be at least ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(value)\n   *\n   * Asserts that the target is less than or equal to `value`.\n   *\n   *     expect(5).to.be.at.most(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.most(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len <= n\n        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n        , 'expected #{this} to have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most ' + n\n        , 'expected #{this} to be above ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish)\n   *\n   * Asserts that the target is within a range.\n   *\n   *     expect(7).to.be.within(5,10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a length range. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * @name within\n   * @param {Number} start lowerbound inclusive\n   * @param {Number} finish upperbound inclusive\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , range = start + '..' + finish;\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= start && len <= finish\n        , 'expected #{this} to have a length within ' + range\n        , 'expected #{this} to not have a length within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor)\n   *\n   * Asserts that the target is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , Chai = new Tea('chai');\n   *\n   *     expect(Chai).to.be.an.instanceof(Tea);\n   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} message _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n    var name = _.getName(constructor);\n    this.assert(\n        flag(this, 'object') instanceof constructor\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name, [value])\n   *\n   * Asserts that the target has a property `name`, optionally asserting that\n   * the value of that property is strictly equal to  `value`.\n   * If the `deep` flag is set, you can use dot- and bracket-notation for deep\n   * references into objects and arrays.\n   *\n   *     // simple referencing\n   *     var obj = { foo: 'bar' };\n   *     expect(obj).to.have.property('foo');\n   *     expect(obj).to.have.property('foo', 'bar');\n   *\n   *     // deep referencing\n   *     var deepObj = {\n   *         green: { tea: 'matcha' }\n   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]\n   *     };\n   *\n   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');\n   *\n   * You can also use an array as the starting point of a `deep.property`\n   * assertion, or traverse nested arrays.\n   *\n   *     var arr = [\n   *         [ 'chai', 'matcha', 'konacha' ]\n   *       , [ { tea: 'chai' }\n   *         , { tea: 'matcha' }\n   *         , { tea: 'konacha' } ]\n   *     ];\n   *\n   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');\n   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');\n   *\n   * Furthermore, `property` changes the subject of the assertion\n   * to be the value of that property from the original object. This\n   * permits for further chainable assertions on that property.\n   *\n   *     expect(obj).to.have.property('foo')\n   *       .that.is.a('string');\n   *     expect(deepObj).to.have.property('green')\n   *       .that.is.an('object')\n   *       .that.deep.equals({ tea: 'matcha' });\n   *     expect(deepObj).to.have.property('teas')\n   *       .that.is.an('array')\n   *       .with.deep.property('[2]')\n   *         .that.deep.equals({ tea: 'konacha' });\n   *\n   * Note that dots and bracket in `name` must be backslash-escaped when\n   * the `deep` flag is set, while they must NOT be escaped when the `deep`\n   * flag is not set.\n   *\n   *     // simple referencing\n   *     var css = { '.link[target]': 42 };\n   *     expect(css).to.have.property('.link[target]', 42);\n   *\n   *     // deep referencing\n   *     var deepCss = { '.link': { '[target]': 42 }};\n   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n   *\n   * @name property\n   * @alias deep.property\n   * @param {String} name\n   * @param {Mixed} value (optional)\n   * @param {String} message _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('property', function (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isDeep = !!flag(this, 'deep')\n      , descriptor = isDeep ? 'deep property ' : 'property '\n      , negate = flag(this, 'negate')\n      , obj = flag(this, 'object')\n      , pathInfo = isDeep ? _.getPathInfo(name, obj) : null\n      , hasProperty = isDeep\n        ? pathInfo.exists\n        : _.hasProperty(name, obj)\n      , value = isDeep\n        ? pathInfo.value\n        : obj[name];\n\n    if (negate && arguments.length > 1) {\n      if (undefined === value) {\n        msg = (msg != null) ? msg + ': ' : '';\n        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));\n      }\n    } else {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          val === value\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  });\n\n\n  /**\n   * ### .ownProperty(name)\n   *\n   * Asserts that the target has an own property `name`.\n   *\n   *     expect('test').to.have.ownProperty('length');\n   *\n   * @name ownProperty\n   * @alias haveOwnProperty\n   * @param {String} name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnProperty (name, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        obj.hasOwnProperty(name)\n      , 'expected #{this} to have own property ' + _.inspect(name)\n      , 'expected #{this} to not have own property ' + _.inspect(name)\n    );\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, message]])\n   *\n   * Asserts that the target has an own property descriptor `name`, that optionally matches `descriptor`.\n   *\n   *     expect('test').to.have.ownPropertyDescriptor('length');\n   *     expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });\n   *     expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });\n   *     expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);\n   *     expect('test').ownPropertyDescriptor('length').to.have.keys('value');\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .length\n   *\n   * Sets the `doLength` flag later used as a chain precursor to a value\n   * comparison for the `length` property.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * *Deprecation notice:* Using `length` as an assertion will be deprecated\n   * in version 2.4.0 and removed in 3.0.0. Code using the old style of\n   * asserting for `length` property value using `length(value)` should be\n   * switched to use `lengthOf(value)` instead.\n   *\n   * @name length\n   * @namespace BDD\n   * @api public\n   */\n\n  /**\n   * ### .lengthOf(value[, message])\n   *\n   * Asserts that the target's `length` property has\n   * the expected value.\n   *\n   *     expect([ 1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foobar').to.have.lengthOf(6);\n   *\n   * @name lengthOf\n   * @param {Number} length\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).to.have.property('length');\n    var len = obj.length;\n\n    this.assert(\n        len == n\n      , 'expected #{this} to have a length of #{exp} but got #{act}'\n      , 'expected #{this} to not have a length of #{act}'\n      , n\n      , len\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addMethod('lengthOf', assertLength);\n\n  /**\n   * ### .match(regexp)\n   *\n   * Asserts that the target matches a regular expression.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} RegularExpression\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(string)\n   *\n   * Asserts that the string target contains another string.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * @name string\n   * @param {String} string\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n\n  /**\n   * ### .keys(key1, [key2], [...])\n   *\n   * Asserts that the target contains any or all of the passed-in keys.\n   * Use in combination with `any`, `all`, `contains`, or `have` will affect\n   * what will pass.\n   *\n   * When used in conjunction with `any`, at least one key that is passed\n   * in must exist in the target object. This is regardless whether or not\n   * the `have` or `contain` qualifiers are used. Note, either `any` or `all`\n   * should be used in the assertion. If neither are used, the assertion is\n   * defaulted to `all`.\n   *\n   * When both `all` and `contain` are used, the target object must have at\n   * least all of the passed-in keys but may have more keys not listed.\n   *\n   * When both `all` and `have` are used, the target object must both contain\n   * all of the passed-in keys AND the number of keys in the target object must\n   * match the number of keys passed in (in other words, a target object must\n   * have all and only all of the passed-in keys).\n   *\n   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo', 'baz');\n   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo');\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys('bar', 'baz');\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys(['foo']);\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys({'foo': 6});\n   *     expect({ foo: 1, bar: 2 }).to.have.all.keys(['bar', 'foo']);\n   *     expect({ foo: 1, bar: 2 }).to.have.all.keys({'bar': 6, 'foo': 7});\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys(['bar', 'foo']);\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys({'bar': 6});\n   *\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , str\n      , ok = true\n      , mixedArgsMsg = 'keys must be given single argument of Array|Object|String, or multiple String arguments';\n\n    switch (_.type(keys)) {\n      case \"array\":\n        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n        break;\n      case \"object\":\n        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n        keys = Object.keys(keys);\n        break;\n      default:\n        keys = Array.prototype.slice.call(arguments);\n    }\n\n    if (!keys.length) throw new Error('keys required');\n\n    var actual = Object.keys(obj)\n      , expected = keys\n      , len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all');\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      var intersection = expected.filter(function(key) {\n        return ~actual.indexOf(key);\n      });\n      ok = intersection.length > 0;\n    }\n\n    // Has all\n    if (all) {\n      ok = keys.every(function(key){\n        return ~actual.indexOf(key);\n      });\n      if (!flag(this, 'negate') && !flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key){\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + str\n      , 'expected #{this} to not ' + str\n      , expected.slice(0).sort()\n      , actual.sort()\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw(constructor)\n   *\n   * Asserts that the function target will throw a specific error, or specific type of error\n   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test\n   * for the error's message.\n   *\n   *     var err = new ReferenceError('This is a bad function.');\n   *     var fn = function () { throw err; }\n   *     expect(fn).to.throw(ReferenceError);\n   *     expect(fn).to.throw(Error);\n   *     expect(fn).to.throw(/bad function/);\n   *     expect(fn).to.not.throw('good function');\n   *     expect(fn).to.throw(ReferenceError, /bad function/);\n   *     expect(fn).to.throw(err);\n   *\n   * Please note that when a throw expectation is negated, it will check each\n   * parameter independently, starting with error constructor type. The appropriate way\n   * to check for the existence of a type of error but for a message that does not match\n   * is to use `and`.\n   *\n   *     expect(fn).to.throw(ReferenceError)\n   *        .and.not.throw(/good function/);\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {ErrorConstructor} constructor\n   * @param {String|RegExp} expected error message\n   * @param {String} message _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (constructor, errMsg, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('function');\n\n    var thrown = false\n      , desiredError = null\n      , name = null\n      , thrownError = null;\n\n    if (arguments.length === 0) {\n      errMsg = null;\n      constructor = null;\n    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {\n      errMsg = constructor;\n      constructor = null;\n    } else if (constructor && constructor instanceof Error) {\n      desiredError = constructor;\n      constructor = null;\n      errMsg = null;\n    } else if (typeof constructor === 'function') {\n      name = constructor.prototype.name;\n      if (!name || (name === 'Error' && constructor !== Error)) {\n        name = constructor.name || (new constructor()).name;\n      }\n    } else {\n      constructor = null;\n    }\n\n    try {\n      obj();\n    } catch (err) {\n      // first, check desired error\n      if (desiredError) {\n        this.assert(\n            err === desiredError\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp}'\n          , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n          , (err instanceof Error ? err.toString() : err)\n        );\n\n        flag(this, 'object', err);\n        return this;\n      }\n\n      // next, check constructor\n      if (constructor) {\n        this.assert(\n            err instanceof constructor\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp} but #{act} was thrown'\n          , name\n          , (err instanceof Error ? err.toString() : err)\n        );\n\n        if (!errMsg) {\n          flag(this, 'object', err);\n          return this;\n        }\n      }\n\n      // next, check message\n      var message = 'error' === _.type(err) && \"message\" in err\n        ? err.message\n        : '' + err;\n\n      if ((message != null) && errMsg && errMsg instanceof RegExp) {\n        this.assert(\n            errMsg.exec(message)\n          , 'expected #{this} to throw error matching #{exp} but got #{act}'\n          , 'expected #{this} to throw error not matching #{exp}'\n          , errMsg\n          , message\n        );\n\n        flag(this, 'object', err);\n        return this;\n      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {\n        this.assert(\n            ~message.indexOf(errMsg)\n          , 'expected #{this} to throw error including #{exp} but got #{act}'\n          , 'expected #{this} to throw error not including #{act}'\n          , errMsg\n          , message\n        );\n\n        flag(this, 'object', err);\n        return this;\n      } else {\n        thrown = true;\n        thrownError = err;\n      }\n    }\n\n    var actuallyGot = ''\n      , expectedThrown = name !== null\n        ? name\n        : desiredError\n          ? '#{exp}' //_.inspect(desiredError)\n          : 'an error';\n\n    if (thrown) {\n      actuallyGot = ' but #{act} was thrown'\n    }\n\n    this.assert(\n        thrown === true\n      , 'expected #{this} to throw ' + expectedThrown + actuallyGot\n      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot\n      , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n      , (thrownError instanceof Error ? thrownError.toString() : thrownError)\n    );\n\n    flag(this, 'object', thrownError);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method)\n   *\n   * Asserts that the object or class target will respond to a method.\n   *\n   *     Klass.prototype.bar = function(){};\n   *     expect(Klass).to.respondTo('bar');\n   *     expect(obj).to.respondTo('bar');\n   *\n   * To check if a constructor will respond to a static function,\n   * set the `itself` flag.\n   *\n   *     Klass.baz = function(){};\n   *     expect(Klass).itself.to.respondTo('baz');\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === _.type(obj) && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Sets the `itself` flag, later used by the `respondTo` assertion.\n   *\n   *     function Foo() {}\n   *     Foo.bar = function() {}\n   *     Foo.prototype.baz = function() {}\n   *\n   *     expect(Foo).itself.to.respondTo('bar');\n   *     expect(Foo).itself.not.to.respondTo('baz');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(method)\n   *\n   * Asserts that the target passes a given truth test.\n   *\n   *     expect(1).to.satisfy(function(num) { return num > 0; });\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , this.negate ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta)\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    new Assertion(obj, msg).is.a('number');\n    if (_.type(expected) !== 'number' || _.type(delta) !== 'number') {\n      throw new Error('the arguments to closeTo or approximately must be numbers');\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  function isSubsetOf(subset, superset, cmp) {\n    return subset.every(function(elem) {\n      if (!cmp) return superset.indexOf(elem) !== -1;\n\n      return superset.some(function(elem2) {\n        return cmp(elem, elem2);\n      });\n    })\n  }\n\n  /**\n   * ### .members(set)\n   *\n   * Asserts that the target is a superset of `set`,\n   * or that the target and `set` have the same strictly-equal (===) members.\n   * Alternately, if the `deep` flag is set, set members are compared for deep\n   * equality.\n   *\n   *     expect([1, 2, 3]).to.include.members([3, 2]);\n   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);\n   *\n   *     expect([4, 2]).to.have.members([2, 4]);\n   *     expect([5, 2]).to.not.have.members([5, 2, 1]);\n   *\n   *     expect([{ id: 1 }]).to.deep.include.members([{ id: 1 }]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    new Assertion(obj).to.be.an('array');\n    new Assertion(subset).to.be.an('array');\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    if (flag(this, 'contains')) {\n      return this.assert(\n          isSubsetOf(subset, obj, cmp)\n        , 'expected #{this} to be a superset of #{act}'\n        , 'expected #{this} to not be a superset of #{act}'\n        , obj\n        , subset\n      );\n    }\n\n    this.assert(\n        isSubsetOf(obj, subset, cmp) && isSubsetOf(subset, obj, cmp)\n        , 'expected #{this} to have the same members as #{act}'\n        , 'expected #{this} to not have the same members as #{act}'\n        , obj\n        , subset\n    );\n  });\n\n  /**\n   * ### .oneOf(list)\n   *\n   * Assert that a value appears somewhere in the top level of array `list`.\n   *\n   *     expect('a').to.be.oneOf(['a', 'b', 'c']);\n   *     expect(9).to.not.be.oneOf(['z']);\n   *     expect([3]).to.not.be.oneOf([1, 2, [3]]);\n   *\n   *     var three = [3];\n   *     // for object-types, contents are not compared\n   *     expect(three).to.not.be.oneOf([1, 2, [3]]);\n   *     // comparing references works\n   *     expect(three).to.be.oneOf([1, 2, three]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object');\n    new Assertion(list).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n\n  /**\n   * ### .change(function)\n   *\n   * Asserts that a function changes an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 3 };\n   *     var noChangeFn = function() { return 'foo' + 'bar'; }\n   *     expect(fn).to.change(obj, 'val');\n   *     expect(noChangeFn).to.not.change(obj, 'val')\n   *\n   * @name change\n   * @alias changes\n   * @alias Change\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      initial !== object[prop]\n      , 'expected .' + prop + ' to change'\n      , 'expected .' + prop + ' to not change'\n    );\n  }\n\n  Assertion.addChainableMethod('change', assertChanges);\n  Assertion.addChainableMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(function)\n   *\n   * Asserts that a function increases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     expect(fn).to.increase(obj, 'val');\n   *\n   * @name increase\n   * @alias increases\n   * @alias Increase\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      object[prop] - initial > 0\n      , 'expected .' + prop + ' to increase'\n      , 'expected .' + prop + ' to not increase'\n    );\n  }\n\n  Assertion.addChainableMethod('increase', assertIncreases);\n  Assertion.addChainableMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(function)\n   *\n   * Asserts that a function decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     expect(fn).to.decrease(obj, 'val');\n   *\n   * @name decrease\n   * @alias decreases\n   * @alias Decrease\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      object[prop] - initial < 0\n      , 'expected .' + prop + ' to decrease'\n      , 'expected .' + prop + ' to not decrease'\n    );\n  }\n\n  Assertion.addChainableMethod('decrease', assertDecreases);\n  Assertion.addChainableMethod('decreases', assertDecreases);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible (can have new properties added to\n   * it).\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect({}).to.be.extensible;\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isExtensible;\n\n    try {\n      isExtensible = Object.isExtensible(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isExtensible = false;\n      else throw err;\n    }\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect({}).to.not.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isSealed;\n\n    try {\n      isSealed = Object.isSealed(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isSealed = true;\n      else throw err;\n    }\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect({}).to.not.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isFrozen;\n\n    try {\n      isFrozen = Object.isFrozen(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isFrozen = true;\n      else throw err;\n    }\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String || this instanceof Number || this instanceof Boolean ) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace Should\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Expect\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * @api private\n   */\n\n  function Assertion (obj, msg, stack) {\n    flag(this, 'ssfi', stack || arguments.callee);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (true !== showDiff) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      var msg = util.getMessage(this, arguments)\n        , actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n   includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40\n\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = []\n  , exports = module.exports = {};\n\n/*!\n * Chai version\n */\n\nexports.version = '3.5.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(this, util);\n    used.push(fn);\n  }\n\n  return this;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","module.exports = require('./lib/chai');\n","// import { baseCurName, rates } from './rates';\n\nexport interface ICurrency {\n\tconvert(amountToConvert: number): number;\n\tconvertBack(amountToConvert: number): number;\n}\n\nexport class Converter implements ICurrency {\n\tprotected rate: number;\n\tconstructor(currencyRate: number) {\n\t\tthis.rate = currencyRate;\n\t};\n\tpublic convert(amountToConvert: number): number {\n\t\tif (amountToConvert < 0) {\n\t\t\tthrow new Error('Negative values are not permitted');\n\t\t}\n\t\treturn (this.rate * amountToConvert);\n\t};\n\tpublic convertBack(amountToConvert: number): number {\n\t\tif (amountToConvert < 0) {\n\t\t\tthrow new Error('Negative values are not permitted');\n\t\t}\n\t\treturn (amountToConvert / this.rate);\n\t}\n}\n\n","import { Converter } from '../src/currency2';\nimport { assert } from 'chai';\n\ndescribe('Testing of the Currency Converter', () => {\n\tdescribe('convert() function', () => {\n\t\tit('should convert correctly', () => {\n\t\t\tconst ctest = new Converter(0.6642);\n\t\t\tconst ctestResult = ctest.convert(46);\n\n\t\t\tassert.equal(ctestResult, '30.5532', 'Did not convert correctly');\n\t\t});\n\n\t\tit('should not except values < 0', () => {\n\t\t\tlet ctest = new Converter(0.6642);\n\n\t\t\tassert.throws(() => ctest.convert(-10), 'Negative values are not permitted');\n\t\t});\n\t});\n\n\tdescribe('convertBack() function', () => {\n\t\tit('should convert back to original currency', () => {\n\t\t\tlet cbtest = new Converter(0.8903);\n\t\t\tlet cbtestResult = cbtest.convert(45);\n\t\t\tlet convertBackResult = cbtest.convertBack(cbtestResult);\n\n\t\t\tassert.equal(convertBackResult, '45', 'Did not convert back correctly');\n\t\t});\n\n\t\tit('should not except values < 0', () => {\n\t\t\tlet cbtest = new Converter(0.8903);\n\n\t\t\tassert.throws(() => cbtest.convertBack(-10), 'Negative values are not permitted');\n\t\t});\n\t});\n});\n","/// <reference path='../typings/index.d.ts' />\n\n// import './atest';\n// import './btest';\nimport './curr_test';\n"],"names":["toString","call","arr","module","exports","Array","isArray","buffer","offset","i","d","s","eLen","e","mLen","m","value","Math","pow","eBias","c","eMax","rt","floor","log","LN2","isNaN","Infinity","abs","isLE","nBytes","write","NaN","nBits","read","parts","join","push","output","lookup","tmp","uint8","len","extraBytes","encodeChunk","maxChunkLength","len2","length","fromByteArray","tripletToBase64","start","end","num","L","revLookup","b64","charCodeAt","placeHolders","j","l","Arr","Error","toByteArray","init","code","Uint8Array","ReferenceError","type","test","obj","getType","tests","Library","prototype","arguments","define","of","Object","undefined","natives","str","val","isnan","dst","src","blitBuffer","base64","base64clean","base64ToBytes","byteArray","hi","lo","units","utf16leToBytes","asciiToBytes","bytes","codePoint","leadSurrogate","string","utf8ToBytes","n","toHex","replace","trim","stringtrim","INVALID_BASE64_RE","Buffer","isBuffer","encoding","RangeError","TypeError","isEncoding","fill","set","target","subarray","targetStart","TYPED_ARRAY_SUPPORT","copy","writeDouble","noAssert","writeDoubleBE","writeDoubleLE","ieee754","buf","littleEndian","checkIEEE754","writeFloat","writeFloatBE","writeFloatLE","ext","max","min","objectWriteUInt32","checkInt","writeInt32BE","writeInt32LE","objectWriteUInt16","writeInt16BE","writeInt16LE","writeInt8","byteLength","mul","sub","limit","writeIntBE","writeIntLE","writeUInt32BE","writeUInt32LE","writeUInt16BE","writeUInt16LE","writeUInt8","maxBytes","writeUIntBE","writeUIntLE","checkOffset","readDoubleBE","readDoubleLE","readFloatBE","readFloatLE","readInt32BE","readInt32LE","readInt16BE","readInt16LE","readInt8","readIntBE","readIntLE","readUInt32BE","readUInt32LE","readUInt16BE","readUInt16LE","readUInt8","readUIntBE","readUIntLE","newBuf","sliceLen","__proto__","slice","res","String","fromCharCode","utf16leSlice","out","hexSlice","ret","latin1Slice","asciiSlice","apply","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","bytesPerSequence","tempCodePoint","firstByte","secondByte","thirdByte","fourthByte","utf8Slice","base64Slice","data","_arr","toJSON","loweredCase","toLowerCase","ucs2Write","base64Write","latin1Write","asciiWrite","utf8Write","hexWrite","remaining","isFinite","parsed","parseInt","substr","strLen","Number","bidirectionalIndexOf","byteOffset","lastIndexOf","indexOf","includes","found","valLength","arrLength","foundIndex","indexSize","dir","arrayIndexOf","from","y","x","targetCopy","thisCopy","thisStart","thisEnd","compare","match","INSPECT_MAX_BYTES","inspect","b","equals","slowToString","swap","swap64","swap32","swap16","_isBuffer","ArrayBuffer","isView","pos","list","allocUnsafe","alloc","concat","a","SlowBuffer","kMaxLength","checked","fromArrayLike","that","createBuffer","fromObject","array","fromArrayBuffer","actual","fromString","size","allocUnsafeSlow","assertSize","configurable","defineProperty","Symbol","species","encodingOrOffset","_augment","poolSize","arg","foo","typedArraySupport","global","result","name","object","getEnumerableProperties","proto","getPrototypeOf","getOwnPropertyNames","forEach","addProperty","property","getProperties","deepEqual","key","ka","iterableEqual","kb","sort","ex","enumerable","isValue","objectEqual","bufferEqual","argumentsEqual","sameValue","regexpEqual","getTime","dateEqual","typeEqual","Promise","objectTypeRegexp","method","_method","chainableBehavior","chainingBehavior","_chainingBehavior","ctx","__methods","assert","transferFlags","asserterName","pd","getOwnPropertyDescriptor","excludeNames","asserterNames","create","hasProtoSupport","flag","old_ssfi","config","includeStack","get","Function","_super","getter","_get","exec","func","part","p","index","_getPathValue","parseFloat","mArr","re","map","path","parsePath","info","exists","hasProperty","parent","last","getPathInfo","literals","ot","__flags","flags","includeAll","assertion","kstr","keys","splice","truncateThreshold","o","objectToString","isError","isDate","isRegExp","ar","braces","base","prev","cur","numLinesEst","reduce","reduceToSingleString","stylize","JSON","stringify","line","split","formatValue","recurseTimes","seen","visibleKeys","__lookupSetter__","__lookupGetter__","formatProperty","hasOwnProperty","formatArray","formatError","simple","formatPrimitive","pop","RegExp","Date","toUTCString","nameSuffix","getName","showHidden","err","html","container","innerHTML","appendChild","cloneNode","document","createElementNS","ns","xmlSerializer","serializeToString","XMLSerializer","xmlVersion","outerHTML","isDOMElement","primitive","constructor","nodeType","nodeName","HTMLElement","depth","colors","args","_obj","flagMsg","msg","objDisplay","expected","negate","getActual","AssertionError","types","some","or","art","t","charAt","expr","overwriteChainableMethod","addChainableMethod","overwriteMethod","overwriteProperty","addMethod","getPathValue","eql","getMessage","expectTypes","props","stack","extend","exclude","captureStackTrace","ssf","callee","showDiff","message","_props","excludeProps","extendExclude","excludes","alias","as","Assertion","to","not","be","frozen","isNotFrozen","isFrozen","sealed","isNotSealed","isSealed","extensible","isNotExtensible","isExtensible","ifError","fn","decrease","prop","doesNotDecrease","decreases","increase","doesNotIncrease","increases","change","doesNotChange","changes","inList","oneOf","superset","include","deep","members","subset","includeDeepMembers","includeMembers","set1","have","same","set2","sameDeepMembers","sameMembers","act","approximately","exp","delta","closeTo","util","operator","val2","ok","Throw","doesNotThrow","assertErr","throw","errt","errs","throws","lengthOf","deepPropertyNotVal","deepPropertyVal","propertyNotVal","propertyVal","notDeepProperty","deepProperty","notProperty","notMatch","notInclude","inc","instanceOf","notInstanceOf","notTypeOf","typeOf","isNotBoolean","isBoolean","isNotNumber","isNumber","isNotString","isString","an","isNotArray","isNotObject","isObject","isNotFunction","isFunction","equal","isDefined","isUndefined","isNotNaN","isNotNull","isNull","isNotFalse","is","isFalse","isNotTrue","isTrue","most","atmst","isAtMost","below","blw","isBelow","least","atlst","isAtLeast","above","abv","isAbove","notDeepEqual","notStrictEqual","strictEqual","notEqual","isNotOk","isOk","fail","chai","express","errmsg","assertDecreases","initial","assertIncreases","assertChanges","isSubsetOf","cmp","_","elem","elem2","every","satisfy","matcher","respondTo","context","itself","assertThrows","thrownError","thrown","expectedThrown","actuallyGot","desiredError","errMsg","assertKeys","any","all","intersection","filter","mixedArgsMsg","assertMatch","assertLength","assertLengthChain","assertOwnPropertyDescriptor","actualDescriptor","descriptor","assertOwnProperty","isDeep","pathInfo","assertInstanceOf","finish","range","assertMost","assertBelow","assertLeast","assertAbove","assertEql","assertEqual","checkArguments","includeChainingBehavior","k","article","chain","Should","loadShould","should","exist","val1","shouldGetter","shouldSetter","writable","valueOf","Boolean","expect","negateMsg","_actual","console","warn","_chai","use","core","used","version","Converter","amountToConvert","rate","convertBack","convert","currencyRate","cbtest","chai_1","currency2_1","it","convertBackResult","cbtestResult","describe","ctest","ctestResult"],"mappings":"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"}